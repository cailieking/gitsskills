package com.cdd.back.controllerimport grails.converters.JSONimport grails.plugin.springsecurity.SpringSecurityService;import java.text.SimpleDateFormatimport org.apache.poi.hssf.usermodel.HSSFRowimport com.cdd.base.domain.CargoShipInformation;import com.cdd.base.domain.InqueryPriceimport com.cdd.base.domain.Order;import com.cdd.base.domain.ShippingPricesimport com.cdd.base.enums.InqueryPriceStatusimport com.cdd.base.enums.TransportationType;
class InqueryPriceController extends BaseController{		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");	def model = 'inqueryPrice'	
	def list() {		if(params.dataType != 'json') {			render view: "/${model}/list", model: [settings: getSettings(menuService.findMenu("/${model}/list"))]			return		}		String searchKey		if(params.search) {			searchKey = "%${params.search}%"		}		def result=CRUDService.list(InqueryPrice, params){			if(searchKey) {				or {					like "companyName", searchKey					like "number", searchKey					like "mobile",searchKey				}			}			if(params.number){				and{					like "number",params.number				}			}			if(params.contactman){				and{					like "contactMan","%${params.contactman}%"				}			}			if(params.createtime){				def date1=sdf.parse(params.createtime)				def date2=sdf.parse(params.createtime)+1				and{					between ("dateCreated", date1,date2)				}			}			if(params.operateBy){				and{					like "operateBy","%${params.operateBy}%"				}			}			if(params.operateTime){				def date1=sdf.parse(params.operateTime)				def date2=sdf.parse(params.operateTime)+1				and{					between ("operateTime", date1,date2)				}			}			if(params.finishBy){				and{					like "finishBy","%${params.finishBy}%"				}			}			if(params.lastUpdated){				def date1=sdf.parse(params.lastUpdated)				def date2=sdf.parse(params.lastUpdated)+1				and{					between ("lastUpdated", date1,date2)				}			}			if(params.status){				and {					eq "status", params.status				}			}							ne "deleteStatus", "2"		}		def map=[rows:[],total:result.totalCount]		result.list.each { InqueryPrice inqueryPrice ->			def data=[:]			switch(inqueryPrice.status){				case InqueryPriceStatus.NotAccepted.name():					data.status="未受理"				break				case InqueryPriceStatus.Acceptance.name():					data.status="受理中"				break				case InqueryPriceStatus.Accepted.name():					data.status="已完成"				break				case InqueryPriceStatus.Revoked.name():					data.status="已撤销"				break			}			data.id=inqueryPrice.id			data.number=inqueryPrice.number			data.infoId=inqueryPrice.info.id			data.companyName=inqueryPrice.companyName			data.contactMan=inqueryPrice.contactMan			data.mobile=inqueryPrice.mobile			data.orderDescript=inqueryPrice.orderDescript			data.dateCreated=sdf.format(inqueryPrice.dateCreated)			data.operateBy=inqueryPrice.operateBy			if(inqueryPrice.operateTime!=null){				data.operateTime=sdf.format(inqueryPrice.operateTime)			}else{				data.operateTime=inqueryPrice.operateTime			}			if(inqueryPrice.deleteStatus=="1"){				data.deleteStatus="用户已删除"			}			if(inqueryPrice.deleteStatus=="0"){				data.deleteStatus=null			}			data.finishedBy=inqueryPrice.finishBy			if(inqueryPrice.lastUpdated==null || inqueryPrice.status!="Accepted"){				data.lastUpdate=null			}else{				data.lastUpdate=sdf.format(inqueryPrice.lastUpdated)			}			map.rows << data		}				render map as JSON	}		/*def data() {		render data(model: model, menuName: '运价咨询信息', domainClass: InqueryPrice)	}*/		//查看页面	def view(){		InqueryPrice data = InqueryPrice.get(params.id as Long)		int infoId=data.info.id		CargoShipInformation info=CargoShipInformation.get(infoId)		Order order=Order.findByInfo(info)		def newData=[:]		if(order!=null){			String str=order.cargoBoxType			if(str!=null && str.indexOf(",")>=0){				String[] aa=str.split(",")				newData.GP20=aa[0]				newData.GP40=aa[1]				newData.HQ40=aa[2]				String c=order.cargoBoxNums				String[] bb=c.split(",")				newData.GP20CargoBoxNums=bb[0]				newData.GP40CargoBoxNums=bb[1]				newData.HQ40CargoBoxNums=bb[2]				newData.data=data				newData.order=order				newData.str="str"			}else{				newData.data=data				newData.order=order				newData.str=null							}		}else{			newData.data=data		}				render view: "/${model}/view", model: [data: newData, settings: getSettings(getMenu('查看', "/${model}/list"))]	}		//删除	def delete() {			String[] ids = params.ids.split(',(\\s)*')			if(ids) {				def printStr=null;				for(def id in ids) {					InqueryPrice data = InqueryPrice.get(id as Long)					if(data.status != "Accepted"){						printStr="正在受理，无法删除"					}							}			if(printStr!=null||"".equals(printStr)){				flash.msgs = [printStr]			}			else{					def objs = []					for(def id in ids) {						InqueryPrice data = InqueryPrice.get(id as Long)						data.deleteStatus = "2"						objs << data					}					InqueryPrice.saveAll(objs)					flash.msgs = ['删除成功']				}			}			redirect uri: "/${model}/list"	}	//受理	def operate(){		InqueryPrice data=InqueryPrice.get(params.id as Long)		InqueryPrice newData=new InqueryPrice(params)		if(data){			if(data.status != "NotAccepted"){				if(data.status != "Acceptance"){						flash.errors = [:]						flash.errors.msgs = ['已结单，不能进行操作']					}else{						flash.errors = [:]						flash.errors.msgs = ['正在受理中']					}			}else{					data.status="Acceptance"					data.operateBy=springSecurityService.currentUser.username					data.operateOpinion=newData.operateOpinion					data.remark=newData.remark					Date operateTime=new Date()					data.operateTime=operateTime					data.save(flush:true)					flash.msgs = ['受理操作成功']			}		}		redirect uri: "/${model}/list"	}		//修改页面	def update(){			InqueryPrice data = InqueryPrice.get(params.id as Long)			int infoId=data.info.id			CargoShipInformation info=CargoShipInformation.get(infoId)			Order order=Order.findByInfo(info)			def newData=[:]			if(order!=null){				String str=order.cargoBoxType				if(str!=null && str.indexOf(",")>=0){				String[] aa=str.split(",")				newData.GP20=aa[0]				newData.GP40=aa[1]				newData.HQ40=aa[2]				String c=order.cargoBoxNums				String[] bb=c.split(",")				newData.GP20CargoBoxNums=bb[0]				newData.GP40CargoBoxNums=bb[1]				newData.HQ40CargoBoxNums=bb[2]				newData.data=data				newData.order=order				newData.str="str"			}else{				newData.data=data				newData.order=order				newData.str=null			}		}else{			newData.data=data		}		render view: "/${model}/edit", model: [data: newData, settings: getSettings(getMenu('修改', "/${model}/list"))]	}		//结单页面	def finish(){		InqueryPrice data=InqueryPrice.get(params.id as Long)		int infoId=data.info.id		CargoShipInformation info=CargoShipInformation.get(infoId)		Order order=Order.findByInfo(info)		def newData=[:]		if(order!=null){			String str=order.cargoBoxType			if(str.indexOf(",")>=0){				String[] aa=str.split(",")				newData.GP20=aa[0]				newData.GP40=aa[1]				newData.HQ40=aa[2]				String c=order.cargoBoxNums				String[] bb=c.split(",")				newData.GP20CargoBoxNums=bb[0]				newData.GP40CargoBoxNums=bb[1]				newData.HQ40CargoBoxNums=bb[2]				newData.data=data				newData.order=order				newData.str="str"			}else{				newData.data=data				newData.order=order				newData.str=null			}		 }else{		 		newData.data=data		 }		render view: "/${model}/finish", model: [data: newData, settings: getSettings(getMenu('结单', "/${model}/list"))]		/*if(data){			data.status="Accepted"			data.finishBy=springSecurityService.currentUser.username			Date lastUpdated=new Date()			data.lastUpdated=lastUpdated		}		data.save(flush:true)		flash.msgs = ['结单操作成功']		redirect uri: "/${model}/list"*/	}		//结单操作	def finished(){		InqueryPrice data		if(params.id){			data=InqueryPrice.get(params.id as Long)			InqueryPrice newData=new InqueryPrice(params)			data.companyName=newData.companyName			data.contactMan=newData.contactMan			data.mobile=newData.mobile			data.qq=newData.qq			data.operateOpinion=newData.operateOpinion			data.remark=newData.remark			data.status="Accepted"			data.finishBy=springSecurityService.currentUser.username			Date lastUpdated=new Date()			data.lastUpdated=lastUpdated		}		data.save(flush:true)		flash.msgs = ['结单操作成功']		redirect uri: "/${model}/list"	}		//修改保存	def save(){		InqueryPrice data		if(params.id){			data=InqueryPrice.get(params.id as Long)			InqueryPrice newData=new InqueryPrice(params)			data.companyName=newData.companyName			data.contactMan=newData.contactMan			data.mobile=newData.mobile			data.qq=newData.qq			data.operateOpinion=newData.operateOpinion			data.remark=newData.remark		}		data.save()		if(data.hasErrors()) {			flash.errors = data.errors			flash.data = data			redirect uri: "/${model}/edit/" + (data.id ?: 'new')		} else {			flash.msgs = ['保存成功']			redirect uri: "/${model}/list"		}	}	
}
